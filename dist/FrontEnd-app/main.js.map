{"version":3,"sources":["./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/app/request/request.component.ts","./src/app/request/request.component.html","./src/environments/environment.ts","./src/app/services/request.service.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/message-to-victim/message-to-victim.component.ts","./src/app/message-to-victim/message-to-victim.component.html","./src/app/rescue-team/rescue-team.component.ts","./src/app/rescue-team/rescue-team.component.html","./src/app/rescue-team-dialog/rescue-team-dialog.component.ts","./src/app/rescue-team-dialog/rescue-team-dialog.component.html","./src/app/communication-lobby/communication-lobby.component.ts","./src/app/communication-lobby/communication-lobby.component.html","./src/app/rescue-team-info-admin-dialog/rescue-team-info-admin-dialog.component.ts","./src/app/rescue-team-info-admin-dialog/rescue-team-info-admin-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/RequestForSending.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/message-to-user-dialog/message-to-user-dialog.component.ts","./src/app/message-to-user-dialog/message-to-user-dialog.component.html","./src/app/app.module.ts","./src/app/request-landing/request-landing.component.ts","./src/app/request-landing/request-landing.component.html","./src/app/model/RescueTeam.ts","./src/app/model/ChatMessageDto.ts","./src/app/services/victim-services.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/services/web-socket.service.ts","./src/app/model/User.ts","./src/app/services/auth.service.ts","./src/app/assign-rescue-team-dialog-admin/assign-rescue-team-dialog-admin.component.ts","./src/app/assign-rescue-team-dialog-admin/assign-rescue-team-dialog-admin.component.html","./src/app/services/rescue-team.service.ts","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/employes-info-dialog/employes-info-dialog.component.ts","./src/app/employes-info-dialog/employes-info-dialog.component.html","./src/app/all-messages-dialog/all-messages-dialog.component.ts","./src/app/all-messages-dialog/all-messages-dialog.component.html","./src/app/rescue-team-info-dialog/rescue-team-info-dialog.component.ts","./src/app/rescue-team-info-dialog/rescue-team-info-dialog.component.html","./src/app/create-rescue-team-dialog/create-rescue-team-dialog.component.ts","./src/app/create-rescue-team-dialog/create-rescue-team-dialog.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/chat-lobby/chat-lobby.component.ts","./src/app/chat-lobby/chat-lobby.component.html","./src/app/request-login/request-login.component.ts","./src/app/request-login/request-login.component.html","./src/app/departments/departments.component.ts","./src/app/departments/departments.component.html","./src/app/services/message.service.ts","./src/app/model/Request.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/token-interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup , FormBuilder } from '@angular/forms';\nimport { User } from '../model/User';\nimport { Router, RouterLink} from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  user: User = new User();\n  \n  userForm = new FormGroup({\n      email:new FormControl(),\n      password:new FormControl(),\n      department:new FormControl(),\n      role:new FormControl(),\n  })\n\n\n  constructor(private FormBuilder:FormBuilder, private http: HttpClient,private router : Router) { \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n  onSubmit(userData:any){\n    console.log(\"IN onSubmit method\");\n    console.log(userData.email);\n    console.log(userData.password);\n    this.http.post('http://localhost:8080/adduser/${userData.email}', userData).subscribe(\n    (response) => this.reDirect(),\n    (error) => console.log(error))\n  }\n\n  reDirect() : void {\n      this.router.navigate([`./fire-department.component.html`]);\n  }\n\n  reDirectToLogin():void{\n    this.router.navigate([`login`]);\n  }\n\n}\n\n","<p>UserWorks</p>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SideNavDirection } from './SidebarNavDirection';\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  showFiller = false;\n\n  constructor(private router: Router) {\n   }\n\n  ngOnInit(): void {\n  }\n  \n  goToRequest() {\n    this.router.navigateByUrl('/requestEmp');\n  }\n\n  goToRescueTeam() {\n    this.router.navigateByUrl('/rescueTeam');\n  }\n  goToUser() {\n    this.router.navigateByUrl('/user');\n  }\n  goToDepartments() {\n    this.router.navigateByUrl('/departments');\n  }\n  goToChatLobby(){\n    this.router.navigateByUrl('/chatLobb');\n  }\n}\n","<div class=\"sidebar\">\n  <div style=\"text-align: center; font-size: 1em\">\n      SideNavigation</div>\n  <div style=\"text-align: center\">\n      <button class=\"btnCreateSubreddit\" (click)=\"goToRequest()\">Request</button>\n  </div>\n  <div style=\"text-align: center\">\n    <button class=\"btnCreateSubreddit\" (click)=\"goToRescueTeam()\">Rescue Team</button>\n</div>\n<div style=\"text-align: center\">\n  <button class=\"btnCreateSubreddit\" (click)=\"goToUser()\">Departments</button>\n</div>\n<div style=\"text-align: center\">\n  <button class=\"btnCreateSubreddit\" (click)=\"goToDepartments()\">Employees</button>\n</div>\n<div style=\"text-align: center\">\n  <button class=\"btnCreateSubreddit\" (click)=\"goToChatLobby()\">ChatLobby</button>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    <mat-toolbar>\n     <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>My App</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n     <mat-icon>share</mat-icon>\n   </button>\n  </mat-toolbar>\n  </p>\n  \n  <p>\n    <mat-toolbar color=\"primary\">\n      <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      \n    </mat-toolbar>\n  </p>\n  \n ","import { Component, OnInit , NgZone} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport {Request} from '../model/Request';\nimport {RequestForSending} from '../model/RequestForSending';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, RouterLink} from '@angular/router';\nimport { trigger } from '@angular/animations';\n//import { AuthenticationService } from '../services/authentication.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { VictimServicesService } from '../services/victim-services.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { LocalStorageService } from 'ngx-webstorage';\n@Component({\n  selector: 'app-request',\n  templateUrl: './request.component.html',\n  styleUrls: ['./request.component.css']\n})\nexport class RequestComponent implements OnInit {\n\n\n  isHidden=true;\n  request: Request = new Request(0,false,false,false);\n  //requestSending: RequestForSending = new RequestForSending(\"\",\"\",\"\",0,);\n  invalid = true;\n  requestForm = new FormGroup({\n    name:new FormControl(),\n    people:new FormControl(),\n    fire:new FormControl(),\n    medical:new FormControl(),\n    crime:new FormControl(),\n    location:new FormControl(),\n  })\n  message=\"THIS IS MESSAGE\";\n // username='user';\n // password='user';\n  invalidLogin = false;\n  chatService: any;\n\n  constructor(private ngZone: NgZone,private localStorage: LocalStorageService,private vicService: VictimServicesService,private FormBuilder:FormBuilder, private http: HttpClient, private router : Router) { \n    \n  }\n\n  ngOnInit(): void {\n    //this.loginService.authenticate(\"user\",\"user\");\n  }\n\n  onSubmit(requestData:any){\n    let nature:any;\n    if(requestData.crime){\n      if(requestData.fire){\n        if(requestData.medical){\n          nature=6;\n          }\n          else{\n            nature=3;\n          }\n      }\n      else if(requestData.medical){\n        nature=5;\n      }\n      else{\n        nature=0;\n      }\n    }\n    else if(requestData.fire){\n        if(requestData.medical){\n            nature=4;\n        } \n        else{\n          nature=1;\n        }\n    }\n    else if(requestData.medical){\n        nature=2;\n    }\n    console.log(requestData.name);\n    console.log(\"nature\"+requestData.nature);\n    console.log(\"NATURE CALCULATED\"+nature);\n    var rSending = new RequestForSending(requestData.name,requestData.people,nature,requestData.location,0,true);\n    //console.log(\"NATURE CALCULATED2\"+JSON.stringify(rSending));\n    this.vicService.addRequest(rSending).subscribe(\n      (data:any)=>{\n        console.log(data);\n        this.localStorage.store('request',data);\n        this.ngZone.run(() => this.router.navigateByUrl('requestLanding'))\n\n      },\n      (error)=>console.log(error)\n    );\n    \n  }\n  redirectToLobby() : void {\n    this.router.navigate(['lobby']);\n}\n  returnData(response : any){\n      if(response.id!=null){\n          this.router.navigate(['/lobby',response.id]);\n      }\n     console.log(response.id);\n  }\n\n\nshowRequestForm():void{\n     // this.loginService.authenticate(\"user\",\"user\");\n      if(this.isHidden==true){\n          this.isHidden=false;\n      }\n      else{this.isHidden=true;}\n}\n\n  redirectToLogin() : void {\n    this.router.navigate(['./login']);\n}\n\nsendMessage() {\n  this.chatService.sendMessage(this.message);\n  this.message = '';\n}\n}\n\n","<div>\n    <mat-card class=\"requestForm-card\">\n        <mat-card-title>Request Form</mat-card-title>\n        <mat-card-content>\n            <form group=\"request-form\" [formGroup]=\"requestForm\" (ngSubmit)=\"onSubmit(requestForm.value)\">\n                <mat-label>Name</mat-label>\n                <p><input matInput type=\"String\" required formControlName=\"name\" placeholder=\"Ex. xyz\"></p>\n            <mat-label>No. of People</mat-label>\n                <p><input matInput type=\"Number\" required formControlName=\"people\" placeholder=\"Ex. 1,2,3...\"></p>\n                <mat-label>location</mat-label>    \n                <p><input matInput type=\"String\" formControlName=\"location\" placeholder=\"berlin,...\"></p>\n            <mat-label>Nature of Assistance Needed</mat-label>    \n            <section class=\"example-section\">\n                <mat-checkbox formControlName=\"fire\" class=\"example-margin\" [(ngModel)]=\"request.fire\">Fire</mat-checkbox>\n                &nbsp;&nbsp;<mat-checkbox formControlName=\"medical\" class=\"example-margin\" [(ngModel)]=\"request.medical\">Medical</mat-checkbox>\n                &nbsp;&nbsp;<mat-checkbox formControlName=\"crime\" class=\"example-margin\" [(ngModel)]=\"request.crime\">Crime</mat-checkbox>  \n            </section>\n            <button class=\"button\" type=\"submit\">Submit</button>\n            &nbsp;&nbsp;\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  constructor(private httpClient : HttpClient) { }\n\n  getRequest(id: number): Observable<any>{\n    const params = new HttpParams().append('id',id.toString());\n    return this.httpClient.get('http://localhost:8080/api/request/getById/',{params:params});\n  }\n\n  completeRequest(id:string): Observable<any>{\n    const params = new HttpParams().append('id',id);\n    return this.httpClient.get('http://localhost:8080/api/request/Completerequest/',{params:params});\n  }\n\n  getAllActiveRequest():Observable<any>{\n    return this.httpClient.get('http://localhost:8080/api/request/getAllActiveRequest/',{});\n  }\n  \n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\n//import { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Observable } from 'rxjs';\nimport { RescueTeam } from '../model/RescueTeam';\n//import {  } from '../services/authentication.service';\nimport {MatDialog ,MatDialogConfig,MatDialogRef} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { RescueTeamDialogComponent} from '../rescue-team-dialog/rescue-team-dialog.component';\nimport { RescueTeamInfoDialogComponent} from '../rescue-team-info-dialog/rescue-team-info-dialog.component';\nimport { EmployesInfoDialogComponent } from \"../employes-info-dialog/employes-info-dialog.component\";\nimport { AllMessagesDialogComponent} from '../all-messages-dialog/all-messages-dialog.component';\nimport * as Stomp from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit , AfterViewInit {\n  rescueTeamId=0;\n  password = 'user';\n  user:any;\n  rescueTeam:any;\n  requestAssignedToUser:any;\n  AllUsers:any;\n  newMessages:any;\n  requestDialogOpen=false;\n  rescueInfoDialogOpen=false;\n  employeeInfoDialogOpen=false;\n  active_request:any\n  ws: any;\n  \n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  displayedColumns=['sender','content'];\n  displayedColumnsForRequest=['requestId','name','location','resTeamObj','nature','status','action','action2'];\n  constructor(private router : Router,private localStorage: LocalStorageService, private http: HttpClient,public dialog: MatDialog) { \n    console.log(this.localStorage.retrieve('username'));\n    this.connect();\n    this.newMessages=[];\n  }\n  \n  ngOnInit(): void {\n    \n        console.log(this.localStorage.retrieve('username'));\n        if(this.localStorage.retrieve('username')==null){this.router.navigate(['/']);}\n        const params = new HttpParams().append('username',this.localStorage.retrieve('username')); \n        this.http.get('http://localhost:8080/api/auth/userByUsername',{params:params}).subscribe(\n          (response)=>\n          {\n            console.log(response),\n            this.user = response,\n            console.log(this.user.rescueTeamId);\n            let params2 = new HttpParams().append('id',this.user.rescueTeamId);\n        this.http.get('http://localhost:8080/api/rescueTeam/getById/',{params:params2}).subscribe(\n          (response)=>{\n            this.rescueTeam=[response],\n            console.log(this.rescueTeam);\n            console.log(response);\n            this.http.get('http://localhost:8080/api/rescueTeam/getRequestByRescueTeamId/',{params:params2}).subscribe(\n                (response)=>{\n                  this.requestAssignedToUser=response;\n                  console.log(response)\n                },\n                (error)=>console.log(error)\n            );\n      \n          },\n          (error)=>console.log(error)\n        );\n          },\n          (error)=>console.log(error)\n        );\n        \n        this.http.get('http://localhost:8080/api/auth/getAllEmp').subscribe(\n          (response)=>this.AllUsers=response,\n          (error)=>console.log(error)\n        );\n        const params2 = new HttpParams().append('id',this.rescueTeamId.toString()); \n        this.http.get('http://localhost:8080/api/request/getUserActiveRequest',{params:params2}).subscribe(\n          (response)=>\n          {\n            this.active_request=response;\n            console.log(response);\n\n          },\n          (error)=>console.log(error)\n        );\n    \n        this.connect();\n  }\n  \n  ngAfterViewInit() {\n    \n    this.requestAssignedToUser.paginator = this.paginator;\n    this.requestAssignedToUser = new MatTableDataSource<any>( this.requestAssignedToUser);\n  }\n  openRescueDialog(): void {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data=this.requestAssignedToUser;\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height=\"50%\";\n    dialogConfig.width=\"60%\";\n    dialogConfig.position={top:\"100px\",left:\"\"}\n    if(!this.requestDialogOpen){this.dialog.open(RescueTeamDialogComponent,dialogConfig);this.requestDialogOpen=true;}\n    else{this.dialog.closeAll();this.requestDialogOpen=false;} \n}\n\n  openRescueTeamInfo():void{\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = this.rescueTeam;\n    dialogConfig.autoFocus = true;\n    \n    dialogConfig.position={top:\"100px\",left:\"\"}\n    if(!this.rescueInfoDialogOpen){this.dialog.open(RescueTeamInfoDialogComponent,dialogConfig);this.rescueInfoDialogOpen=true;}\n    else{this.dialog.closeAll();this.rescueInfoDialogOpen=false;} \n  }\n\n  openEmployeesInfoDialog():void{\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = this.AllUsers;\n    dialogConfig.autoFocus = true;\n    dialogConfig.position={top:\"100px\",left:\"\"};\n    if(!this.employeeInfoDialogOpen){this.dialog.open(EmployesInfoDialogComponent,dialogConfig);this.employeeInfoDialogOpen=true;}\n    else{this.dialog.closeAll();this.employeeInfoDialogOpen=false;} \n  }\n\n  openallMessageDialog():void{\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = this.AllUsers;\n    dialogConfig.autoFocus = true;\n    dialogConfig.position={top:\"100px\",left:\"\"};\n    if(!this.employeeInfoDialogOpen){this.dialog.open(AllMessagesDialogComponent,dialogConfig);this.employeeInfoDialogOpen=true;}\n    else{this.dialog.closeAll();this.employeeInfoDialogOpen=false;} \n  }\n\n\n\n  openChatLobby():void{\n        this.router.navigate(['chatLobby']);\n  }\n\n  connect(){\n    let socket = new SockJS(\"http://localhost:8080/socket\");\n    this.ws = Stomp.Stomp.over(socket);\n    this.ws.connect({}, (frame: any)=>{\n      this.ws.subscribe(\"/topic/chat\",(message: { body: string; }) => {\n        var MessageReceived=JSON.parse(message.body);\n        this.newMessages.push(MessageReceived);\n        console.log(\"ALL MESSAGES\"+MessageReceived.content);\n      });\n      \n    });\n\n    \n  }\n}\n","<div class=\"reddit-body\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <hr />\n      <div class=\"col-md-9\">\n        <mat-grid-list cols=\"1\" rowHeight=\"1:1\">\n          <mat-grid-tile><mat-card class=\"ActiveRequest-card\">\n            <mat-card-header>\n              <mat-card-title>Active Request Assigned</mat-card-title> \n            </mat-card-header>\n            <mat-card-content>  \n              <div>\n              <table mat-table [dataSource]=\"active_request\">\n                <!--displayedColumns: string[] = ['Id','request_id' ,'location', 'Emp1', 'Emp2','Emp3','status','action'];-->\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"requestId\">\n                  <th mat-header-cell *matHeaderCellDef> request_id </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.requestId}} </td>\n                </ng-container>\n              \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"name\">\n                  <th mat-header-cell *matHeaderCellDef> name </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                </ng-container>\n              \n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"location\">\n                  <th mat-header-cell *matHeaderCellDef> location </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.location}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"resTeamObj\">\n                  <th mat-header-cell *matHeaderCellDef> resTeamObj </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.resTeamObj}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"nature\">\n                  <th mat-header-cell *matHeaderCellDef> nature </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nature}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"status\">\n                  <th mat-header-cell *matHeaderCellDef> status </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n                </ng-container>\n\n               <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\n                    <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\">Message</button> </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action2\">\n                  <th mat-header-cell *matHeaderCellDef> Complelte </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\">Complete</button> </td>\n              </ng-container>\n        \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumnsForRequest\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumnsForRequest;\"></tr>\n              \n                <!-- Row shown when there is no matching data. -->\n              </table>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n              \n            </div>\n            </mat-card-content>\n          </mat-card>\n        </mat-grid-tile>\n<!--\n          <mat-grid-tile>\n            <mat-card class=\"example-card\">\n              <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                <mat-card-title>New Messages</mat-card-title> \n              </mat-card-header>\n              <table>\n                <th>Sender</th>\n                <th>Content</th>\n              <mat-card-content>   \n                <div *ngFor=\"let newMessage of newMessages\">\n                  <tr><td>{{newMessage.sender}}-------{{newMessage.content}}</td></tr>\n                  </div>\n                </mat-card-content>\n                </table>\n              <mat-card-actions>\n                <button mat-button>LIKE</button>\n                <button mat-button>SHARE</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-grid-tile>\n    -->     \n        </mat-grid-list>\n       \n      \n      </div>\n        <div class=\"col-md-3\">\n          <div class=\"sidebar\">\n            <div style=\"text-align: center; font-size: 1em\">\n                Side-Navigation</div>\n            <div style=\"text-align: center\">\n                <button class=\"btnCreateSubreddit\" (click)=\"openRescueDialog()\">Request Assigned</button>\n            </div>\n            <div style=\"text-align: center\">\n              <button class=\"btnCreateSubreddit\" (click)=\"openRescueTeamInfo()\">Rescue Team Info.</button>\n          </div>\n          <div style=\"text-align: center\">\n            <button class=\"btnCreateSubreddit\" (click)=\"openRescueDialog()\">Departments</button>\n          </div>\n          <div style=\"text-align: center\">\n            <button class=\"btnCreateSubreddit\" (click)=\"openEmployeesInfoDialog()\">Employees</button>\n          </div>\n          <div style=\"text-align: center\">\n            <button class=\"btnCreateSubreddit\" (click)=\"openChatLobby()\">ChatLobby</button>\n          </div>\n          <div style=\"text-align: center\">\n            <button class=\"btnCreateSubreddit\" (click)=\"openallMessageDialog()\">Messages</button>\n          </div>\n          </div>\n        </div>\n    </div>\n  </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport * as Stomp from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { RequestService} from '../services/request.service';\nimport { ChatMessageDto } from '../model/ChatMessageDto';\nimport { chatMessage, Messagetype } from '../model/ChatMessage';\n@Component({\n  selector: 'app-message-to-victim',\n  templateUrl: './message-to-victim.component.html',\n  styleUrls: ['./message-to-victim.component.css']\n})\nexport class MessageToVictimComponent implements OnInit {\n  \n  RequestElement : any;\n  messageVictimForm:FormGroup;\n  message:any;\n  ws:any;\n  user : any\n  messages:string[]=[];\n  constructor(public dialogRef: MatDialogRef<MessageToVictimComponent>,private localStorage: LocalStorageService,public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data: any,public requestService : RequestService) { \n    this.messageVictimForm = new FormGroup({\n      message:new FormControl('')\n    });\n    this.requestService.getRequest(this.data).subscribe(\n      (response)=>{\n        this.RequestElement=response;\n        console.log(response);\n\n      },\n      (error)=>{\n        console.log(error);\n      }\n    );  \n    this.user = this.localStorage.retrieve('username');\n  }\n\n  ngOnInit(): void {\n    this.connect();\n  }\n  \n  connect(){\n    let socket = new SockJS(\"http://localhost:8080/socket\");\n    this.ws = Stomp.Stomp.over(socket);\n    let topic = \"/topic/chat/\"+\n    this.ws.connect({}, (frame: any) => {\n      this.ws.subscribe(\"/errors\", function(message: { body: string; }) {\n        alert(\"Error \" + message.body);\n      });\n       \n      var dataReceived:string='';\n      this.ws.subscribe(\"/topic/chat\", function(message: { body: string; }) {\n        console.log(JSON.parse(message.body.toString()));\n        dataReceived=JSON.parse(message.body);\n        console.log(\"----------............asdasd.\"+dataReceived);\n      });\n      this.messages.push(dataReceived);\n    });\n  }\n\n  close(){\n    console.log(\"MessageFromADMIN\"+this.messageVictimForm.get('message')!.value);\n    this.dialogRef.close();\n    console.log(\"INSIDE-MESSAGE-DIALOG\"+this.data);\n  }\n\n  sendMessage(){\n    console.log(\"MessageFromADMIN\"+this.messageVictimForm.get('message')!.value);\n    console.log(\"INSIDE-MESSAGE-DIALOG\"+this.data);\n\n    let channel = \"/app/chat/\"+this.RequestElement.requestId+\"/send\";\n    let date = new Date();\n    \n\n    //let messageToSend = new chatMessage(Messagetype.CHAT,this.messageVictimForm.get('message')!.value,this.user);\n    let messageToSend = new ChatMessageDto(channel,date.toString(),this.user,this.messageVictimForm.get('message')!.value,this.RequestElement.requestId);\n    //let messageToSend = new chatMessage(Messagetype.CHAT,messageContent,\"request\");\n   \n  console.log(messageToSend);\n    this.ws.send(\"/app/chat/\"+this.RequestElement.requestId+\"/send\", {},JSON.stringify(messageToSend));\n    console.log(this.messageVictimForm.get('message')!.value);\n    \n  }\n}\n","\n  <div class=\"inbox_chat\">\n    <div class=\"channels\"  *ngFor=\"let message of messages\">\n         <h5>\n                {{message}}\n            </h5>\n            <p>here</p>\n          </div>\n  </div>\n \n\n<form [formGroup]=\"messageVictimForm\" (ngSubmit)=\"sendMessage()\">\n    <div class=\"form-group row\">\n        <label for=\"Message\" class=\"col-md-4 col-form-label text-md-right\">Message</label>\n        <div class=\"col-md-10\">\n            <input type=\"text\" id=\"message\" class=\"form-control\" [formControlName]=\"'message'\" name=\"message\" required\n                autofocus>\n                                              \n        </div>\n    </div>\n\n    <span class=\"col-md-6 offset-md-4\">\n        <button type=\"submit\" class=\"login\" >\n            Send Message\n        </button>\n     \n    </span>   \n    <span class=\"col-md-6 offset-md-4\">\n       <button class=\"login\" (click)=\"close()\">close</button>\n    </span>   \n                    \n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rescue-team',\n  templateUrl: './rescue-team.component.html',\n  styleUrls: ['./rescue-team.component.css']\n})\nexport class RescueTeamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>rescue-team works!</p>\n","import { Component, OnInit, Inject} from '@angular/core';\nimport { MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {RequestService} from '../services/request.service';\nimport {MessageToVictimComponent} from '../message-to-victim/message-to-victim.component';\nimport { i18nMetaToJSDoc } from '@angular/compiler/src/render3/view/i18n/meta';\n\n@Component({\n  selector: 'app-rescue-team-dialog',\n  templateUrl: './rescue-team-dialog.component.html',\n  styleUrls: ['./rescue-team-dialog.component.css']\n})\nexport class RescueTeamDialogComponent implements OnInit {\n  displayedColumns: string[] = ['request_id', 'name', 'location', 'nature','status','action','message'];\n  dataSource = new MatTableDataSource();\n\n  constructor(private dialog : MatDialog,@Inject(MAT_DIALOG_DATA) public data: any,private requestService : RequestService) { }\n  RequestData:any\n  ngOnInit(): void {\n    \n    this.RequestData=this.data;\n    //console.log(this.RequestData.get(0)+\"REQYEST\");\n    console.log(this.data),\n    console.log(this.RequestData),\n    this.dataSource.data=this.RequestData;\n\n  }\n  completeRequest(request_id:any){\n      let data ;\n       this.requestService.completeRequest(request_id).subscribe(\n        (response)=>{\n          console.log(response),\n          data=response\n        },\n        (error)=>console.log(error)\n      );\n      return data;\n  }\n\n  close(){\n    this.dialog.closeAll();\n  }\n\n  messageDialog(request_id:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = request_id;\n    dialogConfig.autoFocus = true;\n    dialogConfig.position={top:\"100px\",left:\"\"};\n    this.dialog.open(MessageToVictimComponent,dialogConfig);\n    \n\n  }\n\n}\n","<h4 mat-dialog-title class=\"RequestDialog\">Reqeust Dialog</h4>\n<button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n<mat-dialog-content>\n    <table mat-table [dataSource]=\"RequestData\" >\n\n        <!-- Position Column -->\n        <ng-container  matColumnDef=\"request_id\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> No. </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.requestId}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> Name </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"location\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> location </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.location}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"nature\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> nature </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.nature}} </td>\n        </ng-container>\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> status </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> Action </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <button class=\"btnCreateSubreddit\" (click)=\"completeRequest(element.requestId)\">complete</button> \n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"message\">\n            <th mat-header-cell *matHeaderCellDef  class=\"align-right\"> Message </th>\n            <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\" (click)=\"messageDialog(element.requestId)\">Message</button> </td>\n          </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n        <!-- Row shown when there is no matching data. -->\n    \n      </table>\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-communication-lobby',\n  templateUrl: './communication-lobby.component.html',\n  styleUrls: ['./communication-lobby.component.css']\n})\nexport class CommunicationLobbyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>communication-lobby works!</p>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AssignRescueTeamDialogAdminComponent } from '../assign-rescue-team-dialog-admin/assign-rescue-team-dialog-admin.component';\nimport { RequestService } from '../services/request.service';\n\n@Component({\n  selector: 'app-rescue-team-info-admin-dialog',\n  templateUrl: './rescue-team-info-admin-dialog.component.html',\n  styleUrls: ['./rescue-team-info-admin-dialog.component.css']\n})\nexport class RescueTeamInfoAdminDialogComponent implements OnInit {\n\n  displayedColumns: string[] = ['Id','request_id' ,'location', 'Members','nature','status','action','action2'];\n  dataSource = new MatTableDataSource();\n\n  constructor(private requestService:RequestService,private dialog : MatDialog,@Inject(MAT_DIALOG_DATA) public data: any) { }\n  RequestData:any\n\n  activeRequest:any;\n\n  ngOnInit(): void {  \n    this.RequestData=this.data;\n    //console.log(this.RequestData.get(0)+\"REQYEST\");\n    console.log(this.data),\n    console.log(this.RequestData),\n    this.dataSource.data=this.RequestData;\n    this.activeRequest=this.requestService.getAllActiveRequest().subscribe(\n      (response)=>{\n        this.activeRequest=response;\n        console.log(response);\n      }\n      \n    );\n  }\n\n  close(){\n    this.dialog.closeAll();\n  }\n  \n  openAssignDialog(rescueTeamId:any){\n\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n\n      dialogConfig.data = rescueTeamId;\n      dialogConfig.autoFocus = true;\n      console.log(\"HERE\"+JSON.stringify(this.activeRequest));\n      this.dialog.open(AssignRescueTeamDialogAdminComponent,dialogConfig);\n      \n  }\n  \n}\n","<h4 mat-dialog-title class=\"rescueTeamDialog\" layout-align=\"center\">Rescue Team Dialog</h4>\n<button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n<mat-dialog-content>\n    <table mat-table [dataSource]=\"RequestData\">\n        <!--displayedColumns: string[] = ['Id','request_id' ,'location', 'Emp1', 'Emp2','Emp3','status','action'];-->\n        <!-- Position Column -->\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"Id\">\n          <th mat-header-cell *matHeaderCellDef class=\"align-center\"> Id </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.rescueTeamId}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"request_id\">\n          <th mat-header-cell *matHeaderCellDef class=\"align-center\"> requestId </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.requestId}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"location\">\n          <th mat-header-cell *matHeaderCellDef class=\"align-center\"> location </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.location}} </td>\n        </ng-container>\n      \n       \n        <ng-container matColumnDef=\"Members\">\n            <th mat-header-cell *matHeaderCellDef class=\"align-center\"> Members </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.members}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"nature\">\n            <th mat-header-cell *matHeaderCellDef  class=\"align-center\"> Nature </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.nature}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef  class=\"align-center\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n          </ng-container>\n        \n\n          <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef class=\"align-center\"> Action </th>\n            <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\" >Message</button> </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"action2\">\n            <th mat-header-cell *matHeaderCellDef class=\"align-right\"> Action2 </th>\n            <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\" (click)=\"openAssignDialog(element.rescueTeamId)\">Assign Request</button> </td>\n          </ng-container>\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n        <!-- Row shown when there is no matching data. -->\n    \n      </table>\n</mat-dialog-content>","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'FrontEnd-app';\n  static API_URL = 'http://localhost:8080/api'\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","export class RequestForSending\r\n{\r\n    constructor(\r\n        public name: string,\r\n        public numberOfPeople : number,\r\n        public nature: string,\r\n        public location: string,\r\n        public assignedToTeamId: number,\r\n        public status: boolean \r\n    ){}\r\n}","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { EmployesInfoDialogComponent } from '../employes-info-dialog/employes-info-dialog.component';\nimport { User } from '../model/User';\nimport { RescueTeamDialogComponent } from '../rescue-team-dialog/rescue-team-dialog.component';\n//import { RescueTeamInfoDialogComponent } from '../rescue-team-info-dialog/rescue-team-info-dialog.component';\nimport { RescueTeamInfoAdminDialogComponent} from '../rescue-team-info-admin-dialog/rescue-team-info-admin-dialog.component';\nimport { AuthService } from '../services/auth.service';\nimport { CreateRescueTeamDialogComponent } from '../create-rescue-team-dialog/create-rescue-team-dialog.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n  \n})\nexport class AdminComponent implements OnInit {\n  rescueTeamId=0;\n  password = 'user';\n  user:any;\n  rescueTeam:any;\n  AllUsers:any;\n  request:any\n  requestDialogOpen=false;\n  rescueInfoDialogOpen=false;\n  employeeInfoDialogOpen=false;\n\n  \n  constructor(private router : Router,private localStorage: LocalStorageService, private http: HttpClient,public dialog: MatDialog) { \n    console.log(this.localStorage.retrieve('username'));\n  }\n  \n  ngOnInit(): void {\n        console.log(this.localStorage.retrieve('username'));\n        const params = new HttpParams().append('username',this.localStorage.retrieve('username')); \n\n         this.http.get('http://localhost:8080/api/request/getAll/').subscribe(\n          (response)=>{this.request=response,console.log(this.rescueTeam)},\n          (error)=>{console.log(error);}\n         );\n\n        this.http.get('http://localhost:8080/api/rescueTeam/getAll/').subscribe(\n          (response)=>{\n            this.rescueTeam=response,\n            console.log(this.rescueTeam);\n          },\n          (error)=>console.log(error)\n        );\n\n        \n        this.http.get('http://localhost:8080/api/auth/getAllEmp').subscribe(\n          (response)=>this.AllUsers=response,\n          (error)=>console.log(error)\n        );\n        \n        \n  }\n  \n  openRescueDialog(): void {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data=this.request;\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.position={top:\"100px\",left:\"\"};\n    dialogConfig.width=\"200%\";\n    if(!this.requestDialogOpen){this.dialog.open(RescueTeamDialogComponent,dialogConfig);this.requestDialogOpen=true;}\n    else{this.dialog.closeAll();this.requestDialogOpen=false;} \n}\n\n  openRescueTeamInfo():void{\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = this.rescueTeam;\n    dialogConfig.autoFocus = true;\n    if(!this.rescueInfoDialogOpen){this.dialog.open(RescueTeamInfoAdminDialogComponent,dialogConfig);this.rescueInfoDialogOpen=true;}\n    else{this.dialog.closeAll();this.rescueInfoDialogOpen=false;} \n  }\n\n  openEmployeesInfoDialog():void{\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = this.AllUsers;\n    dialogConfig.autoFocus = true;\n    if(!this.employeeInfoDialogOpen){this.dialog.open(EmployesInfoDialogComponent,dialogConfig);this.employeeInfoDialogOpen=true;}\n    else{this.dialog.closeAll();this.employeeInfoDialogOpen=false;} \n  }\n\n  openChatLobby(){\n    this.router.navigate(['chatLobby']);\n    \n  }\n\n  createRescueTeam():void{\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = this.AllUsers;\n    if(!this.employeeInfoDialogOpen){this.dialog.open(CreateRescueTeamDialogComponent,dialogConfig);this.employeeInfoDialogOpen=true;}\n    else{this.dialog.closeAll();this.employeeInfoDialogOpen=false;}\n  }\n\n}\n","<div class=\"reddit-body\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <mat-card class=\"example-card\">\r\n                <mat-card-header>\r\n                  <div mat-card-avatar class=\"example-header-image\"></div>\r\n                  <mat-card-title>All Messages</mat-card-title> \r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <!--\r\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n            \r\n                        Position Column \r\n                        <ng-container matColumnDef=\"position\">\r\n                          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n                      \r\n                        Name Column \r\n                        <ng-container matColumnDef=\"name\">\r\n                          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n                      \r\n                       Weight Column\r\n                        <ng-container matColumnDef=\"weight\">\r\n                          <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n                      \r\n                        Symbol Column\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                          <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                          <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n                      \r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                      \r\n                         Row shown when there is no matching data. \r\n                        <tr class=\"mat-row\" *matNoDataRow>\r\n                          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n                        </tr>\r\n                      </table>\r\n                    -->\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                  <button mat-button>LIKE</button>\r\n                  <button mat-button>SHARE</button>\r\n                </mat-card-actions>\r\n              </mat-card>\r\n            </div>  \r\n              <div class=\"col-md-3\">\r\n                <div class=\"sidebar\">\r\n                  <div style=\"text-align: center; font-size: 1em\">\r\n                      Side-Navigation</div>\r\n                  <div style=\"text-align: center\">\r\n                      <button class=\"btnCreateSubreddit\" (click)=\"openRescueDialog()\">All Request</button>\r\n                  </div>\r\n                  <div style=\"text-align: center\">\r\n                    <button class=\"btnCreateSubreddit\" (click)=\"openRescueTeamInfo()\">Rescue Team Info.</button>\r\n                </div>\r\n                <div style=\"text-align: center\">\r\n                  <button class=\"btnCreateSubreddit\" (click)=\"openRescueDialog()\">Departments</button>\r\n                </div>\r\n                <div style=\"text-align: center\">\r\n                  <button class=\"btnCreateSubreddit\" (click)=\"openEmployeesInfoDialog()\">Employees</button>\r\n                </div>\r\n                <div style=\"text-align: center\">\r\n                  <button class=\"btnCreateSubreddit\" (click)=\"openChatLobby()\">ChatLobby</button>\r\n                </div>\r\n                <div style=\"text-align: center\">\r\n                  <button class=\"btnCreateSubreddit\" (click)=\"createRescueTeam()\">Create Rescue Team</button>\r\n                </div>\r\n                \r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\n//import { Stomp } from '@stomp/stompjs';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport * as Stomp from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { chatMessage, Messagetype } from '../model/ChatMessage';\nimport { RequestService } from '../services/request.service';\nimport { ChatMessageDto } from '../model/ChatMessageDto';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\nimport { AuthService } from '../services/auth.service';\n\n\n@Component({\n  selector: 'app-message-to-user-dialog',\n  templateUrl: './message-to-user-dialog.component.html',\n  styleUrls: ['./message-to-user-dialog.component.css']\n})\nexport class MessageToUserDialogComponent implements OnInit {\n // communicatioMessages:string[]=[];\n  UserElement : any;\n  messageToUserForm : FormGroup;\n  receivingUser:any;\n  sendingUser:any;\n  ws:any;\n  user : any\n  coms:string[]=[];\n  constructor(private authService:AuthService,public dialogRef: MatDialogRef<MessageToUserDialogComponent>,private localStorage: LocalStorageService,public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data: any,public requestService : RequestService) { \n    this.messageToUserForm = new FormGroup({\n      message:new FormControl('')\n    });\n    this.user = this.localStorage.retrieve('username');\n    this.receivingUser=this.data;\n    this.sendingUser=this.user;\n  }\n\n  ngOnInit(): void {\n    this.connect();\n    console.log(\"INMESSAGE TO USER DIALOG\"+this.data);\n  }\n  \n  connect(){\n    let socket = new SockJS(\"http://localhost:8080/socket\");\n    this.ws = Stomp.Stomp.over(socket);\n    let topic = \"/topic/chat/\"+ \n    this.ws.connect({}, (frame: any) => {\n      this.ws.subscribe(\"/errors\", function(message: { body: string; }) {\n        alert(\"Error \" + message.body);\n      });\n\n      this.ws.subscribe(\"/topic/chat/\"+this.data, function(message: { body: string; }) {\n        var x = JSON.parse(message.body);\n        console.log(\"----------............asdasd.\"+x);\n      });\n      this.ws.subscribe(\"/topic/chat\", function(message: { body: string; }) {\n        var x = (JSON.parse(message.body));\n        console.log(\"----------............asdasd.\"+x);\n      });\n    \n      \n    });\n  }\n\n  close(){\n    console.log(\"MessageFromADMIN\"+this.messageToUserForm.get('message')!.value);\n    this.dialogRef.close();\n    console.log(\"INSIDE-MESSAGE-DIALOG\"+this.data);\n  }\n\n  sendMessage(){\n    this.coms.push(this.messageToUserForm.get('message')!.value);\n    console.log(\"SENDING USER\"+this.sendingUser);\n    console.log(\"RECEIVING  USER\"+this.receivingUser);\n    let instantDate = Date();\n    let user = this.authService.getUserId(this.sendingUser);  \n    console.log(\"USER HERE\"+user)\n    let channel = \"/app/chat/\"+user+\"/sendToUser\";\n    console.log(\"SENDINGTOUSER\"+user);\n    console.log(\"CHANNEL\"+channel)\n    let messageDTOtoSend = new ChatMessageDto(channel,instantDate,this.user,this.messageToUserForm.get('message')!.value,this.data);\n    \n  console.log(messageDTOtoSend);\n    this.ws.send(\"/app/chat/\"+user+\"/sendToUser\", {},JSON.stringify(messageDTOtoSend));\n    console.log(this.messageToUserForm.get('message')!.value);\n  //  this.communicatioMessages.push(this.messageToUserForm.get('message')!.value);\n  }\n}\n","\n  <div class=\"inbox_chat\">\n      <p>Message Sent</p>\n    <div class=\"channels\" *ngFor=\"let com of coms\">\n            {{com}}\n    </div>\n  </div>\n<form [formGroup]=\"messageToUserForm\" (ngSubmit)=\"sendMessage()\">\n    <div class=\"form-group row\">\n        <label for=\"Message\" class=\"col-md-4 col-form-label text-md-right\">Message</label>\n        <div class=\"col-md-10\">\n            <input type=\"text\" id=\"message\" class=\"form-control\" [formControlName]=\"'message'\" name=\"user_name\" required\n                autofocus>\n                                            \n        </div>\n    </div>\n\n    <span class=\"col-md-6 offset-md-4\">\n        <button type=\"submit\" class=\"login\">\n            Send Message\n        </button>\n     \n    </span>   \n    <span class=\"col-md-6 offset-md-4\">\n       <button class=\"login\" (click)=\"close()\">close</button>\n    </span>   \n                    \n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RequestComponent } from './request/request.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {MatGridListModule} from '@angular/material/grid-list';\n//import {MatTableModule} from '@angular/material/table';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomePageComponent } from './home-page/home-page.component';\n//import { WebsocketService} from '../app/services/websocket.service';\nimport {ChatService} from '../app/services/chat-service.service';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { AdminComponent } from './admin/admin.component';\nimport { TokenInterceptor } from './services/token-interceptor';\n//import { HttpInterceptorService } from './services/http-interceptor.service';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { ToastrModule } from 'ngx-toastr';\nimport { SignupComponent } from './signup/signup.component';\nimport { RescueTeamComponent } from './rescue-team/rescue-team.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ChatLobbyComponent } from '../app/chat-lobby/chat-lobby.component';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport {MatIconModule} from '@angular/material/icon';\n//import { MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule, MatButtonModule } from  '@angular/material';\nimport {MatSelectModule} from '@angular/material/select';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { RescueTeamDialogComponent} from '../app/rescue-team-dialog/rescue-team-dialog.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RescueTeamInfoDialogComponent } from './rescue-team-info-dialog/rescue-team-info-dialog.component';\nimport { EmployesInfoDialogComponent } from './employes-info-dialog/employes-info-dialog.component';\nimport { RescueTeamInfoAdminDialogComponent } from './rescue-team-info-admin-dialog/rescue-team-info-admin-dialog.component';\nimport { CommunicationLobbyComponent } from './communication-lobby/communication-lobby.component';\nimport { CreateRescueTeamDialogComponent } from './create-rescue-team-dialog/create-rescue-team-dialog.component';\nimport { MessageToVictimComponent } from './message-to-victim/message-to-victim.component';\nimport { MessageToUserDialogComponent } from './message-to-user-dialog/message-to-user-dialog.component';\nimport { DepartmentsComponent } from './departments/departments.component';\nimport { RequestLandingComponent } from './request-landing/request-landing.component';\nimport { RequestLoginComponent } from './request-login/request-login.component';\nimport { AllMessagesDialogComponent } from './all-messages-dialog/all-messages-dialog.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { AssignRescueTeamDialogAdminComponent } from './assign-rescue-team-dialog-admin/assign-rescue-team-dialog-admin.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RequestComponent,\n    LoginComponent,\n    UserComponent,\n    LogoutComponent,\n    HomePageComponent,\n    AdminComponent,\n    SignupComponent,\n    RescueTeamComponent,\n    HeaderComponent,\n    ChatLobbyComponent,\n    SidebarComponent,\n    ToolbarComponent,\n    RescueTeamDialogComponent,\n    RescueTeamInfoDialogComponent,\n    EmployesInfoDialogComponent,\n    RescueTeamInfoAdminDialogComponent,\n    CommunicationLobbyComponent,\n    CreateRescueTeamDialogComponent,\n    MessageToVictimComponent,\n    MessageToUserDialogComponent,\n    DepartmentsComponent,\n    RequestLandingComponent,\n    RequestLoginComponent,\n    AllMessagesDialogComponent,\n    AssignRescueTeamDialogAdminComponent\n  ],\n  entryComponents: [ RescueTeamDialogComponent ,RescueTeamInfoAdminDialogComponent,EmployesInfoDialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatGridListModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatToolbarModule,\n    NgxWebstorageModule.forRoot(),\n    ToastrModule.forRoot(),\n    MatSidenavModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule \n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    \n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MessageService } from '../services/message.service';\nimport { RescueTeamService } from '../services/rescue-team.service';\nimport { RequestService } from '../services/request.service';\nimport { RescueTeam } from '../model/RescueTeam';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport * as Stomp from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { RescueTeamInfoDialogComponent } from '../rescue-team-info-dialog/rescue-team-info-dialog.component';\nimport { ChatLobbyComponent } from '../chat-lobby/chat-lobby.component'; \n\n@Component({\n  selector: 'app-request-landing',\n  templateUrl: './request-landing.component.html',\n  styleUrls: ['./request-landing.component.css']\n})\nexport class RequestLandingComponent implements OnInit {\n\n  constructor(private dialog:MatDialog,private http : HttpClient,private requestService: RequestService,private rescueTeamService: RescueTeamService,private localStorage: LocalStorageService, private messageService : MessageService) { \n     \n     \n  }\n  ws:any;\n  allMessages:any;\n  displayedColumns=['sender','content','timestamp'];\n  RequestObj:any;\n  displayedColumns2=['requestId','members'];\n  rescueTeamData:any;\n  ngOnInit(): void {\n\n      console.log(this.localStorage.retrieve('request'));\n      this.RequestObj=this.requestService.getRequest(this.localStorage.retrieve('request').requestId);\n      let RescueTeamAssignedObj:any;\n      console.log(this.localStorage.retrieve('request').resTeamObj);\n      let params2 = new HttpParams().append('id',this.localStorage.retrieve('request').resTeamObj);\n      this.http.get('http://localhost:8080/api/rescueTeam/getById/',{params:params2}).subscribe(\n        (response)=>\n        {\n          JSON.stringify(response);\n          this.rescueTeamData=[response];\n          console.log(response);\n          console.log(\"RESCUE TEAM DATA \"+this.rescueTeamData)\n      },\n      (error)=>{console.log(error);}\n      );\n      // console.log(\"X\"+x);\n      //console.log(this.rescueTeamData);\n      this.messageService.getMessageByRequestId(this.localStorage.retrieve('request').requestId).subscribe(\n        (response)=>{this.allMessages=response;},\n        (error)=>{console.log(error);}\n        \n      );\n      console.log(this.allMessages);\n\n      this.connect();\n      //this.allMessages=this.messageService.getMessageByUserId(this.localStorage.retrieve('request').requestId);  \n      console.log(this.allMessages);\n  }\n\n\n  connect(){\n    let socket = new SockJS(\"http://localhost:8080/socket\");\n    this.ws = Stomp.Stomp.over(socket);\n    let topic = \"/topic/chat/\"+\n    this.ws.connect({}, (frame: any) => {\n      this.ws.subscribe(\"/errors\", function(message: { body: string; }) {\n        alert(\"Error \" + message.body);\n      });\n       \n      var dataReceived:string='';\n      this.ws.subscribe(\"/topic/chat\", function(message: { body: string; }) {\n       console.log(JSON.parse(message.body.toString()));\n        dataReceived=JSON.stringify(message.body);\n        console.log(\"----------............asdasd.\"+dataReceived);\n      });\n      \n    });\n \n  }\n\n  openChatLobby(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.data = this.allMessages;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width=\"100%\";\n    dialogConfig.position={top:\"100px\",left:\"\"}\n    this.dialog.open(ChatLobbyComponent,dialogConfig);\n  }\n\n\n\n}\n","<div class=\"reddit-body\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <hr />\n      <div class=\"col-md-9\">\n \n<mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n  <mat-grid-tile>\n    \n    <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>All Messages</mat-card-title> \n    </mat-card-header>\n    <mat-card-content>\n        <table mat-table [dataSource]=\"allMessages\" class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"sender\">\n              <th mat-header-cell *matHeaderCellDef> Sender </th>\n              <td mat-cell *matCellDef=\"let element\">{{element.sender}}  </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"content\">\n              <th mat-header-cell *matHeaderCellDef> Content </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.content}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"timestamp\">\n              <th mat-header-cell *matHeaderCellDef> timestamp </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.timestamp}} </td>\n            </ng-container>\n\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n    </mat-card-content>\n  </mat-card>\n</mat-grid-tile>\n  <mat-grid-tile>\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title>Rescue Team Assigned Info</mat-card-title> \n      </mat-card-header>\n      <mat-card-content>\n          <table mat-table [dataSource]=\"rescueTeamData\" class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"requestId\">\n                <th mat-header-cell *matHeaderCellDef> Request Id</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.requestId}} </td>\n              </ng-container>\n  \n              <ng-container matColumnDef=\"members\">\n                <th mat-header-cell *matHeaderCellDef> Members </th>\n                <td mat-cell *matCellDef=\"let element\">  {{element.members}} </td>\n              </ng-container>\n  \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns2\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns2;\"></tr>\n            \n            </table>\n      </mat-card-content>\n      <mat-card-actions>\n      </mat-card-actions>\n    </mat-card></mat-grid-tile>\n</mat-grid-list>\n</div>\n\n<div class=\"col-md-3\">\n  <div class=\"sidebar\">\n    <div style=\"text-align: center; font-size: 1em\">\n        Side-Navigation</div>\n  <div style=\"text-align: center\">\n    <button class=\"btnCreateSubreddit\" (click)=\"openChatLobby()\">ChatLobby</button>\n  </div>\n  <div style=\"text-align: center\">\n    <button class=\"btnCreateSubreddit\">Messages</button>\n  </div>\n  </div>\n</div>\n</div>\n</div>\n</div>\n  \n<!--\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>All Messages</mat-card-title> \n    </mat-card-header>\n    <mat-card-content>\n        \n        <table mat-table [dataSource]=\"allMessages\" class=\"mat-elevation-z8\">\n\n          \n           \n   \n            <ng-container matColumnDef=\"sender\">\n              <th mat-header-cell *matHeaderCellDef> Sender </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.sender}} </td>\n            </ng-container>\n          \n          \n            <ng-container matColumnDef=\"content\">\n              <th mat-header-cell *matHeaderCellDef> Content </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.content}} </td>\n            </ng-container>\n          \n           \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          \n             \n           \n          </table>\n        \n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n\n  -->","export class RescueTeam{\r\n    constructor(\r\n        public members : number[],\r\n        public requestIdAssigned: number,\r\n        public location: string,\r\n        public nature: string,\r\n        public status: string \r\n    ){}\r\n}","import { Time } from \"@angular/common\";\r\n\r\nexport class ChatMessageDto {\r\n    channel: string;\r\n    sender: string;\r\n    timestamp: string;\r\n    content : string;\r\n    receiver : string;\r\n    constructor( channel:string,timestamp:string,sender:string,content:string,receiver : string,){\r\n        this.channel = channel;\r\n        this.sender = sender;\r\n        this.content  = content;\r\n        this.timestamp = timestamp;\r\n        this.receiver = receiver;\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Observable } from 'rxjs';\nimport { RequestForSending } from '../model/RequestForSending';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VictimServicesService {\n\n  constructor(private httpClient: HttpClient, private localStorage: LocalStorageService) { }\n/*\n  addRequest(requestForSending: RequestForSending): Observable<Request> {\n    return this.httpClient.post<Request>('http://localhost:8080/api/request/addRequest',\n      requestForSending).pipe(map(data => {\n        return true;\n      }));\n  }\n*/\n\n  getRequest(id: number): Observable<any>{\n    const params = new HttpParams().append('id',id.toString());\n    return this.httpClient.get('http://localhost:8080/api/request/getById/',{params:params});\n  }\n  addRequest(requestForSending: RequestForSending):Observable<Request>{\n    console.log(\"REQUEST SENDING\"+requestForSending)   \n    var req = this.httpClient.post<Request>('http://localhost:8080/api/request/addRequest',\n    requestForSending);\n\n    console.log(\"VICTIM-SERVIE\"+JSON.stringify(req));\n    this.localStorage.store('request',req);\n    return req;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  //faUser = faUser;\n  isLoggedIn: boolean | undefined;\n  username: string | undefined;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.loggedIn.subscribe((data: boolean) => this.isLoggedIn = data);\n    this.authService.username.subscribe((data: string) => this.username = data);\n    this.isLoggedIn = this.authService.isLoggedIn();\n    this.username = this.authService.getUserName();\n  }\n\n  \n  goToUserProfile() {\n    this.router.navigateByUrl('/user-profile/' + this.username);\n  }\n\n  logout() {\n    this.authService.logout();\n    this.isLoggedIn = false;\n    this.router.navigateByUrl('/login');\n  }\n}\n","<header>\n    <nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n        <div class=\"flex-grow-1\">\n            <a aria-label=\"Home\" class=\"logo\" routerLink=\"/home\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" class=\"reddit-icon-svg\">\n                    <g>\n                        <circle fill=\"#FF4500\" cx=\"10\" cy=\"10\" r=\"10\"></circle>\n                        \n                    </g>\n                </svg>\n                <span class=\"reddit-text\">\n                    Disaster Management Application\n                </span>\n            </a>\n        </div>\n        <div class=\"flex-grow-1  float-right\">\n            <div *ngIf=\"isLoggedIn\" ngbDropdown class=\"float-right\">\n                <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                    <button class=\"float-right sign-up mr-2\" (click)=\"logout()\" ngbDropdownItem>Logout</button>\n                </div>\n                <button class=\"userdetails\" id=\"dropdownBasic1\" ngbDropdownToggle>\n                    <img class=\"account-icon\" src=\"https://www.redditstatic.com/avatars/avatar_default_08_D4E815.png\">\n                    {{username}}\n                </button>\n            </div>            \n            <div *ngIf=\"!isLoggedIn\">\n                <a routerLink=\"/signup\" class=\"float-right sign-up mr-2\">Sign up</a>\n                <a routerLink=\"/login\" class=\"float-right sign-up mr-2\">Login</a>\n                <a routerLink=\"/request\" class=\"float-right sign-up mr-2\">Generate Request</a>\n                <a routerLink=\"/requestLogin\" class=\"float-right sign-up mr-2\">Request Login</a>\n            </div>\n        </div>\n    </nav>\n</header>","import { Injectable } from '@angular/core';\nimport * as SockJS from 'sockjs-client';\nimport * as Stomp from '@stomp/stompjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n  topic : String = \"/topic/chat\";\n  stompClient: any;\n  webSocket: any;\n  chatMessages: any = [];\n\n  constructor() { }\n\n\n  public connect(){\n    console.log(\"Initialize WebSocket Connection\");\n       \n        this.stompClient = Stomp.Stomp.over(function(){\n                    return new WebSocket('ws://localhost:8080/socket/')\n                  });\n        const _this = this;\n        let ws = new SockJS(this.webSocket);\n        console.log(ws);\n        this.stompClient.connect({},  (frame: any) => {\n            this.stompClient.subscribe(_this.topic,  (sdkEvent: string) => {\n                this.onMessageReceived(sdkEvent);\n            });\n            //_this.stompClient.reconnect_delay = 2000;\n        });\n  }\n\n/*\n  public openWebSocket(){\n    this.webSocket = new WebSocket('ws://localhost:8080/ws');\n\n    this.webSocket.onopen = (event: any) => {\n      console.log('Open: ', event);\n    };\n\n    this.webSocket.onmessage = (event: any) => {\n      const chatMessageDto = JSON.parse(event.data);\n      this.chatMessages.push(chatMessageDto);\n    };\n\n    this.webSocket.onclose = (event : any) => {\n      console.log('Close: ', event);\n    };\n  }\n*/\n  sendMessage(message:any) {\n    console.log(\"calling logout api via web socket\");\n    this.stompClient.send(\"/app/hello\", {}, JSON.stringify(message));\n}\n\n  public closeWebSocket() {\n    this.webSocket.close();\n  }\n\n  onMessageReceived(message: string) {\n    console.log(\"Message Recieved from Server :: \" + message);\n   // this.handleMessage(JSON.stringify(message.body));\n}\n}","export class User {\r\n    id='';\r\n    username = '';\r\n    password = '';\r\n    fullName = '';\r\n}\r\n  ","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import { SignupRequestPayload } from '../signup/singup-request.payload';\nimport { Observable, throwError } from 'rxjs';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { LoginRequestPayload } from '../login/login-request.payload';\nimport { LoginResponse } from '../login/login-response.payload';\nimport { map, tap } from 'rxjs/operators';\nimport { SignupRequestPayload } from '../signup/singup-request.payload';\nimport { HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  @Output() loggedIn: EventEmitter<boolean> = new EventEmitter();\n  @Output() username: EventEmitter<string> = new EventEmitter();\n\n  refreshTokenPayload = {\n    refreshToken: this.getRefreshToken(),\n    username: this.getUserName()\n  }\n\n  constructor(private httpClient: HttpClient,\n    private localStorage: LocalStorageService) {\n  }\n\n  signup(signupRequestPayload: SignupRequestPayload): Observable<any> {\n    return this.httpClient.post('http://localhost:8080/api/auth/signup', signupRequestPayload, { responseType: 'text' });\n  }\n\n  login(loginRequestPayload: LoginRequestPayload): Observable<boolean> {\n    return this.httpClient.post<LoginResponse>('http://localhost:8080/api/auth/login',\n      loginRequestPayload).pipe(map(data => {\n        this.localStorage.store('authenticationToken', data.authenticationToken);\n        this.localStorage.store('username', data.username);\n        this.localStorage.store('refreshToken', data.refreshToken);\n        this.localStorage.store('expiresAt', data.expiresAt);\n        this.localStorage.store('role',data.role)\n        this.localStorage.store('department',data.department)\n        this.loggedIn.emit(true);\n        this.username.emit(data.username);\n        return true;\n      }));\n  }\n\n  getJwtToken() {\n    return this.localStorage.retrieve('authenticationToken');\n  }\n\n  refreshToken() {\n    return this.httpClient.post<LoginResponse>('http://localhost:8080/api/auth/refresh/token',\n      this.refreshTokenPayload)\n      .pipe(tap(response => {\n        this.localStorage.clear('authenticationToken');\n        this.localStorage.clear('expiresAt');\n\n        this.localStorage.store('authenticationToken',\n          response.authenticationToken);\n        this.localStorage.store('expiresAt', response.expiresAt);\n      }));\n  }\n\n  logout() {\n    this.httpClient.post('http://localhost:8080/api/auth/logout', this.refreshTokenPayload,\n      { responseType: 'text' })\n      .subscribe(data => {\n        console.log(data);\n      }, error => {\n        throwError(error);\n      })\n    this.localStorage.clear('authenticationToken');\n    this.localStorage.clear('username');\n    this.localStorage.clear('refreshToken');\n    this.localStorage.clear('expiresAt');\n    this.localStorage.clear('role');\n    this.localStorage.clear('department');\n  }\n\n  getUserId(username:string){\n\n    let params2 = new HttpParams().append('username',username);\n    let user:any;\n      this.httpClient.get('http://localhost:8080/api/auth/userByUsername',{params:params2}).subscribe(\n        (response)=>{user=response,console.log(\"IN AUTH SERVICE\"+user)},\n        (error)=>{console.log(\"ERROR IN AUTH SERVICE GET USER ID\")}\n      );\n    \n    return user;\n    \n  }\n\n  getUserName() {\n    return this.localStorage.retrieve('username');\n  }\n  getRefreshToken() {\n    return this.localStorage.retrieve('refreshToken');\n  }\n\n  isLoggedIn(): boolean {\n    return this.getJwtToken() != null;\n  }\n  \n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { request } from 'http';\nimport { RequestService} from '../services/request.service';\nimport { RescueTeamService} from '../services/rescue-team.service';\n\n@Component({\n  selector: 'app-assign-rescue-team-dialog-admin',\n  templateUrl: './assign-rescue-team-dialog-admin.component.html',\n  styleUrls: ['./assign-rescue-team-dialog-admin.component.css']\n})\nexport class AssignRescueTeamDialogAdminComponent implements OnInit {\n\n  constructor(public rescueTeamService:RescueTeamService,public requestService:RequestService,public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data: any) { }\n  activeRequest:any;\n  displayedColumns: string[] = ['request_id', 'name', 'location', 'nature','status','assign'];\n \n  ngOnInit(): void {\n    this.requestService.getAllActiveRequest().subscribe(\n      (response)=>{\n        this.activeRequest=response;\n        console.log(response);\n      }\n      \n    );\n  }\n\n\n\n  close(){\n    this.dialog.closeAll();\n  }\n\n  assignRequest(requestId:any){\n    console.log(requestId);\n    console.log(this.data);\n    this.rescueTeamService.assignRequest(requestId,this.data);\n  }\n}\n","<h4 mat-dialog-title class=\"AssignRequestDialog\">AssignRequestDialog Dialog</h4>\n<button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n<mat-dialog-content>\n    <table mat-table [dataSource]=\"activeRequest\" >\n\n        <!-- Position Column -->\n        <ng-container  matColumnDef=\"request_id\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> No. </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.requestId}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> Name </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"location\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> location </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.location}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"nature\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> nature </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.nature}} </td>\n        </ng-container>\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> status </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n          <ng-container matColumnDef=\"assign\">\n            <th mat-header-cell *matHeaderCellDef  class=\"align-right\"> Assign </th>\n            <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\" (click)=\"assignRequest(element.requestId)\">Message</button> </td>\n          </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n        <!-- Row shown when there is no matching data. -->\n    \n      </table>\n</mat-dialog-content>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RescueTeam } from '../model/RescueTeam';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RescueTeamService {\n\n  constructor(private httpClient: HttpClient) { }\n  x:any;\n  getRescueTeam(id: string){\n    const params = new HttpParams().append('id',id);\n    return this.httpClient.get('http://localhost:8080/api/rescueTeam/getById/',{params:params}).pipe(\n        map((data: any) => {\n          console.log(data);\n          return data;\n        }),\n     );\n  }\n/*\n  getmembers(id:number):Observable<any>{\n    const params = new HttpParams().append('id',id.toString());\n    return this.httpClient.get('http://localhost:8080/api').subscribe();\n  }\n*/\n\n  createRescueTeam(resTeam:any){\n    console.log(resTeam);\n    //const params = new HttpParams().append('id',id);\n    console.log(\"RESCUETEAM SERVICE\"+resTeam);\n    return this.httpClient.post('http://localhost:8080/api/rescueTeam/addRescueTeam/',resTeam,{ responseType: 'text' }).subscribe();\n  }\n\n\n  assignRequest(requestId:any,rescueTeamId:any){\n    const params = new HttpParams().append('requestId',requestId).append('rescueTeamId',rescueTeamId);\n    return this.httpClient.get('http://localhost:8080/api/rescueTeam/assignRequestToResTeam/',{params:params}).subscribe();\n  }\n \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor( private router : Router) { }\n\n  ngOnInit(): void {\n      //this.authenticationService.logOut();\n     // this.router.navigate(['login']);\n\n  }\n\n}\n","<p>logout works!</p>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MessageToUserDialogComponent} from '../message-to-user-dialog/message-to-user-dialog.component';\n\n\n@Component({\n  selector: 'app-employes-info-dialog',\n  templateUrl: './employes-info-dialog.component.html',\n  styleUrls: ['./employes-info-dialog.component.css']\n})\nexport class EmployesInfoDialogComponent implements OnInit {\n\n  displayedColumns: string[] = ['Id','fullName' ,'rescueTeamID','action'];\n  dataSource = new MatTableDataSource();\n\n  constructor(private dialog : MatDialog,@Inject(MAT_DIALOG_DATA) public data: any) { }\n  Alluser:any\n  ngOnInit(): void {\n    \n    this.Alluser=this.data;\n    //console.log(this.RequestData.get(0)+\"REQYEST\");\n    console.log(this.data),\n    console.log(this.Alluser),\n    this.dataSource.data=this.Alluser;\n\n  }\n\n  close(){\n    this.dialog.closeAll();\n  }\n\n  messageToUserDialog(user:any){\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.data = user;\n      dialogConfig.autoFocus = true;\n      dialogConfig.position={top:\"100px\",left:\"\"};\n      console.log(\"USEID::::::\"+user)\n      this.dialog.open(MessageToUserDialogComponent,dialogConfig)\n      \n    }\n  \n  \n\n}\n","<h4 mat-dialog-title class=\"EmployeeInfoDialog\" layout-align=\"center\">All user</h4>\n<button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n<mat-dialog-content>\n    <table mat-table [dataSource]=\"Alluser\">\n        <!--displayedColumns: string[] = ['Id','request_id' ,'location', 'Emp1', 'Emp2','Emp3','status','action'];-->\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"Id\">\n          <th mat-header-cell *matHeaderCellDef> Id. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.userId}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"fullName\">\n          <th mat-header-cell *matHeaderCellDef> username </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"rescueTeamID\">\n          <th mat-header-cell *matHeaderCellDef> rescueTeamId </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.rescueTeamId}} </td>\n        </ng-container>\n    \n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef> Action </th>\n            <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\" (click)=\"messageToUserDialog(element.userId)\" >Message</button> </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n        <!-- Row shown when there is no matching data. -->\n    \n      </table>\n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-all-messages-dialog',\n  templateUrl: './all-messages-dialog.component.html',\n  styleUrls: ['./all-messages-dialog.component.css']\n})\nexport class AllMessagesDialogComponent implements OnInit {\n\n  constructor(public dialog : MatDialog,@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n  close(){\n      this.dialog.closeAll();\n  }\n\n}\n","<h4 mat-dialog-title class=\"allMessagesDialog\" layout-align=\"center\">All Messages</h4>\n<button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n<mat-dialog-content>\n   \n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-rescue-team-info-dialog',\n  templateUrl: './rescue-team-info-dialog.component.html',\n  styleUrls: ['./rescue-team-info-dialog.component.css']\n})\nexport class RescueTeamInfoDialogComponent implements OnInit {\n\n  displayedColumns: string[] = ['Id','request_id' ,'location', 'members','status','action'];\n  dataSource = new MatTableDataSource();\n\n  constructor(private dialog : MatDialog,@Inject(MAT_DIALOG_DATA) public data: any) { }\n  RequestData:any\n  ngOnInit(): void {\n    \n    this.RequestData=this.data;\n    //console.log(this.RequestData.get(0)+\"REQYEST\");\n    console.log(this.data),\n    console.log(this.RequestData),\n    this.dataSource.data=this.RequestData;\n\n  }\n\n  close(){\n    this.dialog.closeAll();\n  }\n\n\n}\n","<h4 mat-dialog-title class=\"rescueTeamDialog\" layout-align=\"center\">Rescue Team Dialog</h4>\n<button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n<mat-dialog-content>\n    <table mat-table [dataSource]=\"RequestData\">\n        <!--displayedColumns: string[] = ['Id','request_id' ,'location', 'Emp1', 'Emp2','Emp3','status','action'];-->\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"Id\">\n          <th mat-header-cell *matHeaderCellDef> Id. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.rescueTeamId}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"request_id\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> requestId </th>\n          <td mat-cell style=\"text-align: center\" *matCellDef=\"let element\"> {{element.requestId}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"location\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> location </th>\n          <td mat-cell  style=\"text-align: center\" *matCellDef=\"let element\"> {{element.location}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"members\">\n          <th mat-header-cell style=\"text-align: center\" *matHeaderCellDef> Members </th>\n          <td mat-cell  style=\"text-align: center\" *matCellDef=\"let element\"> {{element.members}} </td>\n        </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n          </ng-container>\n        \n\n          <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef class=\"align-right\"> Action </th>\n            <td mat-cell *matCellDef=\"let element\"> <button class=\"btnCreateSubreddit\">Message</button> </td>\n          </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RescueTeam} from '../model/RescueTeam';\nimport { RescueTeamService } from '../services/rescue-team.service';\n\n\n@Component({\n  selector: 'app-create-rescue-team-dialog',\n  templateUrl: './create-rescue-team-dialog.component.html',\n  styleUrls: ['./create-rescue-team-dialog.component.css']\n})\nexport class CreateRescueTeamDialogComponent implements OnInit {\n  rescueTeam: RescueTeam = new RescueTeam([],0,'','','');\n  selectedValue:any;\n  fire:any;\n  crime:any;\n  medical:any;\n  SelectedEmployees=new FormControl();\n  rescueTeamForm = new FormGroup({\n    name:new FormControl(),\n    selectedEmployee:new FormControl(),\n    fire:new FormControl(),\n    medical:new FormControl(),\n    crime:new FormControl(),\n    location:new FormControl(),\n  })\n  AllEmp:any;\n\n  constructor(public rescueTeamservice : RescueTeamService,public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data: any,private FormBuilder:FormBuilder) { \n    this.AllEmp=this.data;\n    console.log(this.AllEmp);\n    \n  }\n  \n  ngOnInit(): void {\n    //cthis.AllEmp=this.data;\n  }\n\n  close(){\n    this.dialog.closeAll();\n  }\n\n  createRescueTeam(rescueTeamData:any){\n      let nature:any;\n      if(rescueTeamData.crime){\n        if(rescueTeamData.fire){\n          if(rescueTeamData.medical){\n            nature=6;\n            }\n            else{\n              nature=3;\n            }\n        }\n        else if(rescueTeamData.medical){\n          nature=5;\n        }\n        else{\n          nature=0;\n        }\n      }\n      else if(rescueTeamData.fire){\n          if(rescueTeamData.medical){\n              nature=4;\n          } \n          else{\n            nature=1;\n          }\n      }\n      else if(rescueTeamData.medical){\n          nature=2;\n      }\n    console.log(nature);\n    console.log(rescueTeamData);\n    console.log(this.SelectedEmployees.value);\n    this.rescueTeam.members=this.SelectedEmployees.value;\n    this.rescueTeam.location=this.rescueTeamForm.value.location;\n    console.log(this.rescueTeam);\n    this.rescueTeam.nature=nature;\n\n    this.rescueTeam.status=\"true\";\n    this.rescueTeamservice.createRescueTeam(this.rescueTeam);\n  }\n\n}\n","\n \n <span class=\"col-md-6 offset-md-10\">              \n    <button type=\"button\" (click)=\"close()\"class=\"sign-up\">\n        close\n     </button>\n</span>\n<div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"text-align: center\">\n                    <h4>Register Rescue Team</h4>\n                </div>\n                <div class=\"card-body\">\n                    <form group=\"rescueTeam-form\" [formGroup]=\"rescueTeamForm\" (ngSubmit)=\"createRescueTeam(rescueTeamForm.value)\">\n                        <div class=\"form-group row\">\n                            <mat-label>Nature of Team</mat-label>    \n                            <section class=\"example-section\">\n                        <mat-checkbox formControlName=\"fire\" class=\"example-margin\" [(ngModel)]=\"fire\">Fire</mat-checkbox>\n                        &nbsp;&nbsp;<mat-checkbox formControlName=\"medical\" class=\"example-margin\" [(ngModel)]=\"medical\">Medical</mat-checkbox>\n                        &nbsp;&nbsp;<mat-checkbox formControlName=\"crime\" class=\"example-margin\" [(ngModel)]=\"crime\">Crime</mat-checkbox>  \n                            </section>\n            \n                       \n                        </div>\n                        <div class=\"form-group row\">\n                            <label for=\"email_address\" class=\"col-md-6 col-form-label text-md-right\">Employees</label>\n                            <div class=\"col-md-6\">\n                                    <mat-form-field appearance=\"fill\">\n                                        <mat-label>All Employees</mat-label>\n                                        <mat-select [formControl]=\"SelectedEmployees\" multiple>\n                                            <!--\n                                            <mat-select-trigger>\n                                                {{SelectedEmployees.value ? SelectedEmployees.value[0] : ''}}\n                                                <span *ngIf=\"SelectedEmployees?.length > 1\" class=\"example-additional-selection\">\n                                                  (+{{SelectedEmployees.value.length - 1}} {{SelectedEmployees?.value.length === 2 ? 'other' : 'others'}})\n                                                </span>\n                                              </mat-select-trigger>\n                                              -->\n                                          <mat-option *ngFor=\"let user of AllEmp\" [value]=\"user.userId\">{{user.userId}}---{{user.department}}</mat-option>\n                                        </mat-select>\n                                      </mat-form-field>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"location\" class=\"col-md-6 col-form-label text-md-right\">Location</label>\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" id=\"location\" class=\"form-control\" [formControlName]=\"'location'\" name=\"location\" required\n                                    autofocus>\n                                \n                            </div>\n                            \n                        </div>\n                        <span class=\"col-md-6 offset-md-4\">\n                            \n                            <button type=\"submit\" class=\"sign-up\">\n                                Create\n                            </button>\n                        </span>\n                    </form>\n                </div>\n            </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../services/auth.service';\nimport {SignupRequestPayload} from '../signup/singup-request.payload'\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm:any;\n  signupRequestPayload: { username: string; email: string; password: string; department: string; };\n  Departments:any=[\"Fire\",\"Medical\",\"Army\",\"Police\",\"Scientist\"];\n\n  constructor(private authService: AuthService, private router: Router,\n    private toastr: ToastrService) {\n    this.signupRequestPayload = {\n      username: '',\n      email: '',\n      password: '',\n      department:''\n    };\n  }\n\n\n  ngOnInit(){\n    this.signupForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      department: new FormControl('',Validators.required),\n    });\n  }\n\n    signup(){\n      this.signupRequestPayload.email = this.signupForm.get('email')!.value;\n      this.signupRequestPayload.username = this.signupForm.get('username')!.value;\n      this.signupRequestPayload.password = this.signupForm.get('password')!.value;\n      this.signupRequestPayload.department = this.signupForm.get('department')!.value;\n\n      this.authService.signup(this.signupRequestPayload)\n        .subscribe(data => {\n          this.router.navigate(['/login'],\n            { queryParams: { registered: 'true' } });\n        }, error => {\n          console.log(error);\n          this.toastr.error('Registration Failed! Please try again');\n        });\n    }\n\n    changeCity(e:any) {\n      this.Departments.setValue(e.target.value, {\n        onlySelf: true\n      })\n    }\n  }\n\n\n","<div class=\"register-section\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-3\"></div>\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"text-align: center\">\n                    <h4>Register</h4>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\n                        <div class=\"form-group row\">\n                            <label for=\"email_address\" class=\"col-md-4 col-form-label text-md-right\">E-Mail\n                                Address</label>\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" [formControlName]=\"'email'\" id=\"email_address\" class=\"form-control\" name=\"email-address\" required\n                                    autofocus>\n                                <span *ngIf=\"!signupForm.get('email').valid && signupForm.get('email').touched\">\n                                    Please provide a valid email\n                                </span>                                    \n                            </div>\n                        </div>\n \n                        <div class=\"form-group row\">\n                            <label class=\"col-md-4 col-form-label text-md-right\">User Name</label>\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" [formControlName]=\"'username'\"class=\"form-control\" required autofocus>\n                                <span *ngIf=\"!signupForm.get('username').valid && signupForm.get('username').touched\">\n                                    Please provide a valid username\n                                </span>                                 \n                            </div>\n                        </div>\n \n                        <div class=\"form-group row\">\n                            <label for=\"password\" class=\"col-md-4 col-form-label text-md-right\">Password</label>\n                            <div class=\"col-md-6\">\n                                <input type=\"password\" [formControlName]=\"'password'\" id=\"password\" class=\"form-control\" name=\"password\" required>\n                                <span *ngIf=\"!signupForm.get('password').valid && signupForm.get('password').touched\">\n                                    Please provide a valid Password\n                                </span>  \n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"department\" class=\"col-md-4 col-form-label text-md-right\">Department</label>\n                            <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"fill\">\n                                    <mat-label>Department</mat-label>\n                                    <select class=\"custom-select\" (change)=\"changeCity($event)\" formControlName=\"department\">\n                                        <option value=\"\" disabled>Choose your Department</option>\n                                        <option *ngFor=\"let department of Departments\" [ngValue]=\"department\">{{department}}</option>\n                                     </select>\n                                  </mat-form-field>\n                                \n                            </div>\n                        </div>\n\n \n                        <span class=\"col-md-6 offset-md-4\">\n                            <button type=\"submit\" class=\"sign-up\">\n                                Sign Up\n                            </button>\n                            <span style=\"padding-left: 15px\">Existing user? <a routerLink=\"/login\">Log In</a></span>\n                        </span>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3\"></div>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { VictimServicesService } from '../services/victim-services.service';\nimport { RescueTeamService } from '../services/rescue-team.service';\nimport { RequestReceived } from '../model/RequestReceived';\nimport * as Stomp from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { WebSocketService } from '../services/web-socket.service';\nimport { ThrowStmt } from '@angular/compiler';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { ChatMessageDto } from '../model/ChatMessageDto';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { chatMessage , Messagetype} from '../model/ChatMessage';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { time } from 'console';\n\n@Component({\n  selector: 'app-chat-lobby',\n  templateUrl: './chat-lobby.component.html',\n  styleUrls: ['./chat-lobby.component.css']\n})\nexport class ChatLobbyComponent implements OnInit {\n  webSocketEndPoint: string = 'http://localhost:8080/ws';\n\n  topic: string = \"/topic/greetings\";\n  request:RequestReceived;\n  title = 'WebSocketChatRoom';\n  rescueTeam : any;\n  x:any;\n  greetings: string[] = [];\n  disabled = true;\n  messages:any;\n  private stompClient:any;\n  channelList!:String[];\n  user:any;\n  //greetings: string[] = [];\n  showConversation: boolean = false;\n  ws: any;\n  chatMessage: ChatMessageDto | undefined;\n//  name: string;\n // disabled: boolean;\n  chatform:any;\n  message:any;\n  messageInput:any;\n  constructor(private dialog:MatDialog,private localStorage: LocalStorageService,private vicServices : VictimServicesService,private reqServices : RescueTeamService,private webSocketService : WebSocketService,@Inject(MAT_DIALOG_DATA) public data: any) {\n    this.request = this.localStorage.retrieve('request');\n    this.user = this.localStorage.retrieve('username');\n    if(this.user!=null){\n      console.log(\"INSIDE\");\n    }\n    else{\n      console.log(this.request);\n    console.log(this.request.resTeamObj);\n    this.vicServices.getRequest(this.request.requestId).subscribe(data => {\n      console.log(data),\n      this.rescueTeam=this.reqServices.getRescueTeam(data.resTeamObj).subscribe(\n        (response)=>{\n          console.log(response),\n          this.rescueTeam=response,\n          this.channelList=this.rescueTeam.members;\n        },\n        (error)=>console.log(error)\n      );\n    }, error => {\n      console.log(error)\n    });\n  //  this.channelList=[this.emp1,this.emp2,this.emp3];\n    }\n    this.chatform = new FormGroup({\n      messageInput: new FormControl(''),\n    });\n\n  }\n\n\n  ngOnInit(): void {\n    //this.request = this.localStorage.retrieve('request');this.request = this.localStorage.retrieve('request');\n    this.messages=this.data;\n    console.log(this.messages);\n    this.connect();\n  }\n\n  connect(){\n\n      //connect to stomp where stomp endpoint is exposed\n      //let ws = new SockJS(http://localhost:8080/greeting);\n      let socket = new SockJS(\"http://localhost:8080/socket\");\n      let messages1 : any[];\n      this.ws = Stomp.Stomp.over(socket);\n      this.ws.connect({}, (frame: any) => {\n        this.ws.subscribe(\"/errors\", function(message: { body: string; }) {\n          alert(\"Error \" + message.body);\n        });\n\n        this.ws.subscribe(\"/topic/chat\", (message: { body: string; }) => {\n          console.log((message.body));\n          //console.log(JSON.parse(message.body.content))\n          var MessageReceived =(message.body);\n         // console.log(MessageReceived);\n\n          this.messages.push(MessageReceived);\n          console.log(this.messages);\n          \n          console.log(\"ALL MESSAGES\"+this.messages);\n          //this.messages.push(messages1);\n         // this.messages.set(\"content\",message.body.content)\n         // console.log(this.messages);\n        });\n        let messageToSend = {sender:this.user,type:'JOIN'};\n        //new chatMessage(Messagetype.CHAT,this.chatform.get('message').value,\"TEST\");\n        //this.ws.send(\"/app/chat/\"+this.request.resTeamObj+\"/addUser\",{},JSON.stringify(messageToSend));\n        //let messageContent = \"TEST_MESSAGE\";\n        //let messageToSend2 = new chatMessage(Messagetype.CHAT,messageContent,this.user);\n       // this.ws.send(\"/app/chat/\"+this.request.resTeamObj+\"/sendMessage\",{},JSON.stringify(messageToSend2));\n       this.ws.subscribe(\"/topic/chat/channel/1\",(message: { body: any; }) => {\n          var x = console.log(JSON.parse(message.body));\n          console.log(\"----------............asdasd.\"+x);\n        });\n        this.disabled = true;\n      }, function(error: string) {\n        alert(\"STOMP error \" + error);\n      });\n      //let messageToSend = new chatMessage(Messagetype.CHAT,\"TEST MESSAGE\",this.user);\n      //this.ws.send(\"/topic/chat/\", {}, JSON.stringify(messageToSend));\n      \n  }\n\n  disconnect(){\n    this.webSocketService.closeWebSocket();\n  }\n\n  sendMessage() {\n    \n    let timestamp =  new Date();\n    let messageContent = this.chatform.get('messageInput')!.value;\n    console.log(\"Message INPUT\"+messageContent)\n    //let messageToSend = new chatMessage(Messagetype.CHAT,messageContent,\"request\");\n    //chat/{rescueTeamId}/send\n    let channel = \"/app/chat/\"+this.rescueTeam.rescueTeamId+\"/sendToRescueTeam\"\n    let messageToSend = new ChatMessageDto(channel,Date(),this.request.requestId.toString(),messageContent,this.rescueTeam.rescueTeamId);\n    console.log(messageToSend);\n    this.ws.send(channel, {},JSON.stringify(messageToSend));\n    //this.ws.send(\"/app/chat\", {},messageContent);\n}\n\n\n  sendMessage2(){\n      //const message = new ChatMessageDto(\"test2\",this.newmessage);\n\n      this.webSocketService.sendMessage(\"Message\");\n      console.log();\n  }\n\n  close(){\n    this.dialog.closeAll();\n  }\n\n/*\ntitle = 'angular-chat';\n  channel: ChannelData;\n  username = '';\n  messages: Message[] = [];\n  newMessage = '';\n  channelList: ChannelData[];\n  chatClient: any;\n  currentUser: User;\n\n  async joinChat() {\n    const { username } = this;\n    try {\n      const response = await axios.post('http://localhost:5500/join', {\n        username,\n      });\n      const { token } = response.data;\n      const apiKey = response.data.api_key;\n\n      this.chatClient = new StreamChat(apiKey);\n\n      this.currentUser = await this.chatClient.setUser(\n        {\n          id: username,\n          name: username,\n        },\n        token\n      );\n\n      const channel = this.chatClient.channel('team', 'talkshop');\n      await channel.watch();\n      this.channel = channel;\n      this.messages = channel.state.messages;\n      this.channel.on('message.new', event => {\n        this.messages = [...this.messages, event.message];\n      });\n\n      const filter = {\n        type: 'team',\n        members: { $in: [`${this.currentUser.me.id}`] },\n      };\n      const sort = { last_message_at: -1 };\n\n      this.channelList = await this.chatClient.queryChannels(filter, sort, {\n        watch: true,\n        state: true,\n      });\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  }\n\n  async sendMessage() {\n    if (this.newMessage.trim() === '') {\n      return;\n    }\n\n    try {\n      await this.channel.sendMessage({\n        text: this.newMessage,\n      });\n      this.newMessage = '';\n    } catch (err) {\n      console.log(err);\n    }\n  }\n*/\n\n}","<link\n  rel=\"stylesheet\"\n  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n  integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n  crossorigin=\"anonymous\"\n/>\n<link\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\"\n  type=\"text/css\"\n  rel=\"stylesheet\"\n/>\n<script src=\"https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js\"></script>\n<script src=\"/webjars/sockjs-client/sockjs.min.js\"></script>\n    <script src=\"/webjars/stomp-websocket/stomp.min.js\"></script>\n    <script src=\"../chat-lobby/websocket.js\"></script>\n<div class=\"container\">\n    <h3 class=\" text-center\">Messaging</h3>\n    <button class=\"btnCreateSubreddit\" (click)=\"close()\">Close</button>\n    <div class=\"messaging\">\n      <div class=\"inbox_msg\">\n        <div class=\"inbox_people\">\n          <div class=\"headind_srch\">\n            <div class=\"channel_heading\">\n              <h4>Members</h4>\n              \n            </div>\n          </div>\n          <div class=\"inbox_chat\">\n            <div class=\"channels\"  *ngFor=\"let channel of channelList\">\n              <div class=\"chat_list\">\n                <div class=\"chat_people\">\n                  <div class=\"chat_ib\">\n                    <h5>\n                        {{channel}}\n                    </h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mesgs\" >\n          <div class=\"msg_history\">\n            <li class=\"message\" *ngFor=\"let message of messages\">\n              <div class=\"received_msg\">\n                <div class=\"received_withd_msg\">\n                   <p>\n                    {{message.content}}\n                   </p>\n                  \n                </div>\n              </div>\n\n              <div class=\"outgoing_msg\">\n                  <div class=\"sent_msg\">\n                     <p>\n                      {{message.content}}\n                     </p>\n                    \n                  </div>\n              </div>\n       \n            </li>\n          </div>\n          <div class=\"type_msg\">\n            <form class=\"input_msg_write\" [formGroup]=\"chatform\" (ngSubmit)=\"sendMessage()\">\n              <input\n                type=\"text\"\n                class=\"write_msg\"\n                placeholder=\"Type a message\"\n                name=\"newMessage\"\n                [formControlName]=\"'messageInput'\"\n                required\n              />\n              <button class=\"msg_send_btn\" type=\"submit\">\n                <i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'app-request-login',\n  templateUrl: './request-login.component.html',\n  styleUrls: ['./request-login.component.css']\n})\nexport class RequestLoginComponent implements OnInit {\n\n  requestForm: FormGroup;\n\n  constructor(private localStorage: LocalStorageService,private httpClient : HttpClient,private router:Router) { \n    this.requestForm = new FormGroup({\n      fullName: new FormControl(''),\n      location: new FormControl('')\n    });\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  fetchRequest(){\n    let params = new HttpParams().append('fullName',this.requestForm.get('fullName')!.value).append('location',this.requestForm.get('location')!.value);\n    console.log(this.requestForm.get('location')!.value);\n    console.log(params);\n    this.httpClient.get('http://localhost:8080/api/request/victimLogin/',{params:params}).subscribe(\n      (response)=>{\n        console.log(response);\n        this.localStorage.store('request',response);\n        if(response!=null){\n          this.router.navigate(['requestLanding']);\n        }\n        else{\n          this.router.navigate(['requestLogin']);\n        }\n        \n      }\n    )\n  \n  }\n\n}\n","<div class=\"login-section\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-3\"></div>\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"text-align: center\"><h4>Victim Login</h4></div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"requestForm\" (ngSubmit)=\"fetchRequest()\">\n                        <div class=\"form-group row\">\n                            <label for=\"victim_name\" class=\"col-md-4 col-form-label text-md-right\">Full Name</label>\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" id=\"victim_name\" class=\"form-control\" [formControlName]=\"'fullName'\" name=\"victim_name\" required\n                                    autofocus>\n                                                                \n                            </div>\n                        </div>\n \n                        <div class=\"form-group row\">\n                            <label for=\"location\" class=\"col-md-4 col-form-label text-md-right\">Location</label>\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" id=\"location\" class=\"form-control\" [formControlName]=\"'location'\" name=\"location\" required>\n                                                              \n                            </div>\n                        </div>\n \n                        <span class=\"col-md-6 offset-md-4\">\n                            <button type=\"submit\" class=\"login\">\n                                Login\n                            </button>\n                        </span>   \n                                        \n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-departments',\n  templateUrl: './departments.component.html',\n  styleUrls: ['./departments.component.css']\n})\nexport class DepartmentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>departments works!</p>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ChatMessageDto} from '../model/ChatMessageDto';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private httpClient: HttpClient) { }\n  \n  getMessageByRequestId(requestId:number):Observable<any>{\n    const params = new HttpParams().append('requestId',requestId.toString());\n    console.log(\"GetMESSAGEBYUSERID\"+params);\n     return this.httpClient.get('http://localhost:8080/api/request/getmessages/',{params:params});\n  }\n\n}\n","export class Request{\r\n    constructor(\r\n        public people: number,\r\n        public fire: boolean,\r\n        public medical: boolean,\r\n        public crime: boolean,\r\n        \r\n    ){}\r\n    \r\n}   ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent } from '../app/login/login.component'\nimport {RequestComponent} from '../app/request/request.component'\nimport {LogoutComponent } from '../app/logout/logout.component'\nimport { HomePageComponent} from '../app/home-page/home-page.component';\nimport { UrlPermission} from '../app/services/urlPermission';\nimport { AdminComponent } from '../app/admin/admin.component';\nimport {  SignupComponent} from '../app/signup/signup.component';\nimport { HeaderComponent} from '../app/header/header.component';\nimport { ChatLobbyComponent} from '../app/chat-lobby/chat-lobby.component';\nimport { SidebarComponent } from '../app/sidebar/sidebar.component';\nimport { ToolbarComponent } from '../app/toolbar/toolbar.component';\nimport { RequestLandingComponent } from '../app/request-landing/request-landing.component';\nimport { RequestLoginComponent } from '../app/request-login/request-login.component';\nconst routes: Routes = [ \n  {path : 'login' , component : LoginComponent},\n  {path : 'request' , component : RequestComponent,},\n  {path : 'logout' , component : LogoutComponent,canActivate:[]},\n  {path : 'admin' , component : AdminComponent, canActivate:[]},\n  {path : 'signup' , component : SignupComponent, canActivate:[]},\n  {path : 'header' , component : HeaderComponent, canActivate:[]},\n  {path : 'chatLobby' , component : ChatLobbyComponent, canActivate:[]},\n  {path : '' , component: LoginComponent, canActivate:[]},\n  {path : 'sidebar' , component: SidebarComponent, canActivate:[]},\n  {path : 'toolbar' , component: ToolbarComponent, canActivate:[]},\n  {path : 'home' , component: HomePageComponent, canActivate:[]},\n  {path : 'requestLanding' , component: RequestLandingComponent, canActivate:[]},\n  {path : 'requestLogin' , component: RequestLoginComponent, canActivate:[]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginRequestPayload } from './login-request.payload';\nimport { AuthService } from '../services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\nimport { AssertNotNull } from '@angular/compiler';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginRequestPayload: LoginRequestPayload;\n  registerSuccessMessage='';\n  isError=false;\n\n  constructor(private authService: AuthService, private activatedRoute: ActivatedRoute,\n    private router: Router, private toastr: ToastrService, private localStorage: LocalStorageService) {\n    this.loginRequestPayload = {\n      username: '',\n      password: ''\n    };\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit(): void {\n    \n\n    this.activatedRoute.queryParams\n      .subscribe(params => {\n        if (params.registered !== undefined && params.registered === 'true') {\n          this.toastr.success('Signup Successful');\n          this.registerSuccessMessage = 'Please Check your inbox for activation email '\n            + 'activate your account before you Login!';\n        }\n      });\n  }\n\n  login() {\n    this.loginRequestPayload.username = this.loginForm.get('username')!.value;\n    this.loginRequestPayload.password = this.loginForm.get('password')!.value;\n    console.log(this.loginForm.get('username')!.value);\n    console.log(this.loginForm.get('password')!.value);\n    let responseData: any;\n    let errorData:any\n    this.authService.login(this.loginRequestPayload).subscribe(\n      (response)=>{\n          if(response){\n            if(this.localStorage.retrieve('role')==\"ADMIN\" || (this.loginForm.get('username')!.value==\"admin\" && this.loginForm.get('password')!.value==\"admin\")){\n              console.log(\"INSIDE\");\n              this.router.navigate(['admin']);\n            }\n            else{\n              this.router.navigate(['home']);\n            }\n          }\n          else{\n            this.isError = true;\n            console.log(\"LOGIN ERROR\");\n            throwError(errorData);\n            this.router.navigateByUrl('/login');\n          }\n      },\n      (error)=>errorData=error\n    );\n    \n  }\n\n}\n","<div class=\"login-section\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\" style=\"text-align: center\"><h4>Login</h4></div>\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"user_name\" class=\"col-md-4 col-form-label text-md-right\">Username</label>\r\n                            <div class=\"col-md-6\">\r\n                                <input type=\"text\" id=\"user_name\" class=\"form-control\" [formControlName]=\"'username'\" name=\"user_name\" required\r\n                                    autofocus>\r\n                                                                \r\n                            </div>\r\n                        </div>\r\n \r\n                        <div class=\"form-group row\">\r\n                            <label for=\"password\" class=\"col-md-4 col-form-label text-md-right\">Password</label>\r\n                            <div class=\"col-md-6\">\r\n                                <input type=\"password\" id=\"password\" class=\"form-control\" [formControlName]=\"'password'\" name=\"password\" required>\r\n                                                              \r\n                            </div>\r\n                        </div>\r\n \r\n                        <span class=\"col-md-6 offset-md-4\">\r\n                            <button type=\"submit\" class=\"login\">\r\n                                Login\r\n                            </button>\r\n                            <span style=\"padding-left: 15px\">New User? <a routerLink=\"/signup\">SIGN UP</a></span>\r\n                        </span>   \r\n                                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\"></div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { catchError, switchMap, take, filter } from 'rxjs/operators';\nimport { LoginResponse } from '../login/login-response.payload';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenInterceptor implements HttpInterceptor {\n\n    isTokenRefreshing = false;\n    refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    constructor(public authService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n\n        if (req.url.indexOf('refresh') !== -1 || req.url.indexOf('login') !== -1) {\n            return next.handle(req);\n        }\n        const jwtToken = this.authService.getJwtToken();\n\n        if (jwtToken) {\n            return next.handle(this.addToken(req, jwtToken)).pipe(catchError(error => {\n                if (error instanceof HttpErrorResponse\n                    && error.status === 403) {\n                    return this.handleAuthErrors(req, next);\n                } else {\n                    return throwError(error);\n                }\n            }));\n        }\n        return next.handle(req);\n\n    }\n\n    private handleAuthErrors(req: HttpRequest<any>, next: HttpHandler)\n        : Observable<HttpEvent<any>> {\n        if (!this.isTokenRefreshing) {\n            this.isTokenRefreshing = true;\n            this.refreshTokenSubject.next(null);\n\n            return this.authService.refreshToken().pipe(\n                switchMap((refreshTokenResponse: LoginResponse) => {\n                    this.isTokenRefreshing = false;\n                    this.refreshTokenSubject\n                        .next(refreshTokenResponse.authenticationToken);\n                    return next.handle(this.addToken(req,\n                        refreshTokenResponse.authenticationToken));\n                })\n            )\n        } else {\n            return this.refreshTokenSubject.pipe(\n                filter(result => result !== null),\n                take(1),\n                switchMap((res) => {\n                    return next.handle(this.addToken(req,\n                        this.authService.getJwtToken()))\n                })\n            );\n        }\n    }\n\n    addToken(req: HttpRequest<any>, jwtToken: any) {\n        return req.clone({\n            headers: req.headers.set('Authorization',\n                'Bearer ' + jwtToken)\n        });\n    }\n\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}